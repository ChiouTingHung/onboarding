/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.redhat.lab.interfaces.adapter.api;

import com.redhat.lab.interfaces.dto.*;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-07-14T11:54:45.004751+08:00[Asia/Taipei]")
@Validated
@Api(value = "attachments", description = "the attachments API")
public interface AttachmentsApi {

    /**
     * GET /attachments/{attachmentId}
     *
     * @param attachmentId attachmentId (required)
     * @return attachment content (status code 200)
     */
    @ApiOperation(value = "", nickname = "attachmentsAttachmentIdGet", notes = "", response = Attachment.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "attachment content", response = Attachment.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/attachments/{attachmentId}",
        produces = { "application/json" }
    )
    ResponseEntity<Attachment> attachmentsAttachmentIdGet(@ApiParam(value = "attachmentId", required = true) @PathVariable("attachmentId") String attachmentId);


    /**
     * PUT /attachments/{attachmentId}
     *
     * @param attachmentId attachmentId (required)
     * @param attachmentId2 附件編號 (required)
     * @param attaKind 附件類別:A:正面/B:反面 (required)
     * @param updateTime 修改時間 (required)
     * @param content content (required)
     * @return attachments updated (status code 200)
     */
    @ApiOperation(value = "", nickname = "attachmentsAttachmentIdPut", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "attachments updated") })
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/attachments/{attachmentId}",
        consumes = { "multipart/form-data" }
    )
    ResponseEntity<Void> attachmentsAttachmentIdPut(@ApiParam(value = "attachmentId", required = true) @PathVariable("attachmentId") String attachmentId,@ApiParam(value = "附件編號", required = true) @Valid @RequestPart(value = "attachmentId", required = true) String attachmentId2,@ApiParam(value = "附件類別:A:正面/B:反面", required = true) @Valid @RequestPart(value = "attaKind", required = true) String attaKind,@ApiParam(value = "修改時間", required = true) @Valid @RequestPart(value = "updateTime", required = true) String updateTime,@ApiParam(value = "content") @Valid @RequestPart(value = "content", required = true) MultipartFile content);


    /**
     * GET /attachments/list
     *
     * @param caseId caseId (required)
     * @return get attachments list by caseId (status code 200)
     */
    @ApiOperation(value = "", nickname = "attachmentsListGet", notes = "", response = AttachmentCaseMapping.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "get attachments list by caseId", response = AttachmentCaseMapping.class, responseContainer = "List") })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/attachments/list",
        produces = { "application/json" }
    )
    ResponseEntity<List<AttachmentCaseMapping>> attachmentsListGet(@NotNull @ApiParam(value = "caseId", required = true) @Valid @RequestParam(value = "caseId", required = true) String caseId);


    /**
     * POST /attachments
     *
     * @param content content (required)
     * @param attaKind 附件類別:A:正面/B:反面 (optional)
     * @return Attachments create (status code 200)
     */
    @ApiOperation(value = "", nickname = "attachmentsPost", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Attachments create") })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/attachments",
        consumes = { "application/json" }
    )
    ResponseEntity<Attachment> attachmentsPost(@ApiParam(value = "content") @Valid @RequestBody NewAttachment newAttachment);

}
