/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.redhat.lab.interfaces.adapter.api;

import com.redhat.lab.interfaces.dto.Account;
import com.redhat.lab.interfaces.dto.NewAccount;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-07-14T11:54:45.004751+08:00[Asia/Taipei]")
@Validated
@Api(value = "accounts", description = "the accounts API")
public interface AccountsApi {

    /**
     * GET /accounts/{accountId} : query account info
     * query account info by accountId.
     *
     * @param accountId account ID (required)
     * @return query account info successful. (status code 200)
     */
    @ApiOperation(value = "query account info", nickname = "accountsAccountIdGet", notes = "query account info by accountId.", response = Account.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "query account info successful.", response = Account.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/accounts/{accountId}",
        produces = { "application/json" }
    )
    ResponseEntity<Account> accountsAccountIdGet(@ApiParam(value = "account ID", required = true) @PathVariable("accountId") String accountId);


    /**
     * PUT /accounts/{accountId} : modify
     * modify account info
     *
     * @param accountId account Id (required)
     * @param account  (required)
     * @return modify successful (status code 200)
     */
    @ApiOperation(value = "modify", nickname = "accountsAccountIdPut", notes = "modify account info", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "modify successful") })
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/accounts/{accountId}",
        consumes = { "application/json" }
    )
    ResponseEntity<Void> accountsAccountIdPut(@ApiParam(value = "account Id", required = true) @PathVariable("accountId") String accountId,@ApiParam(value = "", required = true) @Valid @RequestBody Account account);


    /**
     * GET /accounts : retrieve all account info
     * Return all account info from systen query.
     *
     * @return account info response successful. (status code 200)
     */
    @ApiOperation(value = "retrieve all account info", nickname = "accountsGet", notes = "Return all account info from systen query.", response = Account.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "account info response successful.", response = Account.class, responseContainer = "List") })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/accounts",
        produces = { "application/json" }
    )
    ResponseEntity<List<Account>> accountsGet();


    /**
     * POST /accounts : create a new account
     * create a new acoount to conduct some cases.
     *
     * @param newAccount creater a new account. (required)
     * @return create account successful. (status code 200)
     */
    @ApiOperation(value = "create a new account", nickname = "accountsPost", notes = "create a new acoount to conduct some cases.", response = String.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "create account successful.", response = String.class) })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/accounts",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<String> accountsPost(@ApiParam(value = "creater a new account.", required = true) @Valid @RequestBody NewAccount newAccount);

}
